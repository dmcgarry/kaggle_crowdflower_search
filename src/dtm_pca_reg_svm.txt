from sklearn.pipeline import Pipeline, FeatureUnion
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.svm import SVR
from sklearn.decomposition import TruncatedSVD
from sklearn.preprocessing import StandardScaler
from sklearn.feature_selection import chi2, f_classif, SelectPercentile
from sklearn.base import BaseEstimator, TransformerMixin

class VarSelect(BaseEstimator, TransformerMixin):
	def __init__(self, keys):
		self.keys = keys
	def fit(self, x, y=None):
		return self
	def transform(self, df):
		return df[self.keys].values

pipeline = Pipeline([
	('union', FeatureUnion([
		('text', Pipeline([
			('textSelector', VarSelect(keys='text')),
			('tfidf', TfidfVectorizer(strip_accents='unicode', analyzer='word', token_pattern=r'\w{1,}', use_idf=True, smooth_idf=True, sublinear_tf=True)),
			('textFeat', SelectPercentile(chi2)),
			('pca', TruncatedSVD(algorithm='randomized', n_iter=5, random_state=args.SEED, tol=0.0))
		])),
		('meta', Pipeline([
			('metaSelector', VarSelect(keys=['query_percent_title','word2vec','desc_len']))
		]))
	])),
	('scl', StandardScaler(copy=True, with_mean=True, with_std=True)),
	('finalFeat',SelectPercentile(f_classif)),
	('svm', SVR(kernel='rbf'))
])

grid = {
	'union__text__tfidf__min_df':[3],'union__text__tfidf__max_df': [0.30],'union__text__tfidf__ngram_range':[(1,3)],
	'union__text__textFeat__percentile':[97,96,94],
	'union__text__pca__n_components' : [275,325,375],
	'finalFeat__percentile':[90,89,88],
	'svm__C': [3,5],'svm__degree':[1]
}
